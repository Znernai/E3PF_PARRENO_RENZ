{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Win10\\\\IT Elective 3\\\\Friendlyapp\\\\Friendlyapp\\\\MainWebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Win10\\\\IT Elective 3\\\\Friendlyapp\\\\friendlyapp\\\\mainwebsite\\\\src\\\\Login.js\";\n\n/* with the help of the Login.js component it can call the REST API and on successful call it \r\nwill redirect it on the Dashboard component. */\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './Utils/Common'; // The stracture of fullpage for Login.js\n\nfunction Login(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const username = useFormInput('');\n  const password = useFormInput('');\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1]; // handle button click of login form\n\n\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    axios.post('http://localhost:4000/users/signin', {\n      username: username.value,\n      password: password.value\n    }).then(response => {\n      setLoading(false);\n      setUserSession(response.data.token, response.data.user);\n      props.history.push('/dashboard');\n    }).catch(error => {\n      setLoading(false);\n      if (error.response.status === 401) setError(error.response.data.message);else setError(\"The Username or Password is incorrect, Please try again later.\");\n    });\n  }; // this is the output that can see if you start the website\n\n\n  return React.createElement(\"div\", {\n    className: \"log\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Login\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Username\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, username, {\n    autoComplete: \"new-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Password\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({\n    type: \"password\"\n  }, password, {\n    autoComplete: \"new-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), error && React.createElement(React.Fragment, null, React.createElement(\"small\", {\n    style: {\n      color: 'Black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, error), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: loading ? 'Loading...' : 'Login',\n    onClick: handleLogin,\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nconst useFormInput = initialValue => {\n  const _useState5 = useState(initialValue),\n        _useState6 = _slicedToArray(_useState5, 2),\n        value = _useState6[0],\n        setValue = _useState6[1];\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    onChange: handleChange\n  };\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Win10/IT Elective 3/Friendlyapp/friendlyapp/mainwebsite/src/Login.js"],"names":["React","useState","axios","setUserSession","Login","props","loading","setLoading","username","useFormInput","password","error","setError","handleLogin","post","value","then","response","data","token","user","history","push","catch","status","message","marginTop","color","initialValue","setValue","handleChange","e","target","onChange"],"mappings":"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","sourcesContent":["/* with the help of the Login.js component it can call the REST API and on successful call it \r\nwill redirect it on the Dashboard component. */ \r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { setUserSession } from './Utils/Common';\r\n\r\n// The stracture of fullpage for Login.js\r\n\r\nfunction Login(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const username = useFormInput('');\r\n  const password = useFormInput('');\r\n  const [error, setError] = useState(null);\r\n\r\n  // handle button click of login form\r\n  const handleLogin = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    axios.post('http://localhost:4000/users/signin', { username: username.value, password: password.value }).then(response => {\r\n      setLoading(false);\r\n      setUserSession(response.data.token, response.data.user);\r\n      props.history.push('/dashboard');\r\n    }).catch(error => {\r\n      setLoading(false);\r\n      if (error.response.status === 401) setError(error.response.data.message);\r\n      else setError(\"The Username or Password is incorrect, Please try again later.\");\r\n    });\r\n  }\r\n\r\n  // this is the output that can see if you start the website\r\n  return (\r\n    <div className=\"log\">\r\n      Login<br /><br />\r\n        <div>\r\n          Username<br />\r\n            <input type=\"text\" {...username} autoComplete=\"new-password\" />\r\n        </div>\r\n\r\n        <div style={{ marginTop: 10 }}>\r\n          Password<br />\r\n            <input type=\"password\" {...password} autoComplete=\"new-password\" />\r\n        </div>\r\n      {error && <><small style={{ color: 'Black' }}>{error}</small><br /></>}<br />\r\n      <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useFormInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  }\r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}