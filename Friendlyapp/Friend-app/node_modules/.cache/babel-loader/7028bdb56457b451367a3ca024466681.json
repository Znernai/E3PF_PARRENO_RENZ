{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Win10\\\\IT Elective 3\\\\Friendlyapp\\\\Friendlyapp\\\\MainWebsite\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Win10\\\\IT Elective 3\\\\Friendlyapp\\\\friendlyapp\\\\mainwebsite\\\\src\\\\Utils\\\\PrivateRoute.js\";\n\n/* Which can use to access the routes with login token only.\r\n So if user is not logged-in then we will redirect back it to the login page */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common'; // handle the private routes\n\nfunction PrivateRoute(_ref) {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => getToken() ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/Win10/IT Elective 3/Friendlyapp/friendlyapp/mainwebsite/src/Utils/PrivateRoute.js"],"names":["React","Route","Redirect","getToken","PrivateRoute","Component","component","rest","props","pathname","state","from","location"],"mappings":";;;AAAA;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,UAAzB,C,CAEA;;AACA,SAASC,YAAT,OAAyD;AAAA,MAAtBC,SAAsB,QAAjCC,SAAiC;AAAA,MAARC,IAAQ;;AACvD,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAWL,QAAQ,KAAK,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL,GAAgC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD;;AAED,eAAeR,YAAf","sourcesContent":["/* Which can use to access the routes with login token only.\r\n So if user is not logged-in then we will redirect back it to the login page */\r\n\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getToken } from './Common';\r\n\r\n// handle the private routes\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}